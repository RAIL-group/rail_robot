<?xml version="1.0" ?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="pan_and_tilt" params="*origin">

    <joint name="pan" type="revolute">
      <axis xyz="0 0 1"/>
      <limit
        effort="2"
        lower="${-pi/2}"
        upper="${pi/2}"
        velocity="${pi}"/>
      <xacro:insert_block name="origin"/>
      <parent
        link="${robot_name}/camera_tower_link"/>
      <child
        link="${robot_name}/pan_link"/>
      <dynamics
        friction="0.1"
        damping="0.1"/>
    </joint>

    <link name="${robot_name}/pan_link">
      <visual>
        <origin
          rpy="0 0 ${pi/2}"
          xyz="0 0 0"/>
        <geometry>
          <mesh
            filename="package://rail_robot/meshes/locobot_meshes/locobot_pan.stl"
            scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="interbotix_black"/>
      </visual>
      <collision>
        <origin
          rpy="0 0 ${pi/2}"
          xyz="0 0 0"/>
        <geometry>
          <mesh
            filename="package://rail_robot/meshes/locobot_meshes/locobot_pan.stl"
            scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <inertial>
        <origin
          rpy="0 0 ${pi/2}"
          xyz="0.012 0.000496 0.018504"/>
        <mass value="0.098997"/>
        <inertia
          ixx="0.0000276300"
          ixy="0.0000000418"
          ixz="0.0000005145"
          iyy="0.0000204300"
          iyz="-0.0000000421"
          izz="0.0000276300"/>
      </inertial>
    </link>

    <gazebo reference="${robot_name}/pan_link">
      <material>Gazebo/DarkGrey</material>
      <self_collide>true</self_collide>
    </gazebo>

    <joint name="tilt" type="revolute">
      <axis xyz="0 1 0"/>
      <limit
        effort="2"
        lower="${-pi/2}"
        upper="${radians(75)}"
        velocity="${pi}"/>
      <origin
        rpy="0 0 0"
        xyz="0.025034 0 0.019"/>
      <parent
        link="${robot_name}/pan_link"/>
      <child
        link="${robot_name}/tilt_link"/>
      <dynamics
        friction="0.1"
        damping="0.1"/>
    </joint>

    <xacro:if value="${hardware_type == 'gz_classic'}">
      <ros2_control name="camera_controller" type="system">
        <hardware>
          <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>
        <joint name="pan">
          <command_interface name="position">
            <param name="min">"${-pi/2}"</param>
            <param name="max">"${pi/2}"</param>
          </command_interface>
          <state_interface name="position"/>
        </joint>
        <joint name="tilt">
          <command_interface name="position">
            <param name="min">"${-pi/2}"</param>
            <param name="max">"${radians(75)}"</param>
          </command_interface>
          <state_interface name="position"/>
        </joint>
      </ros2_control>
    </xacro:if>

    <link name="${robot_name}/tilt_link">
      <visual>
        <origin
          rpy="0 0 ${pi/2}"
          xyz="0 0 0"/>
        <geometry>
          <mesh
            filename="package://rail_robot/meshes/locobot_meshes/locobot_tilt.stl"
            scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="interbotix_black"/>
      </visual>
      <collision>
        <origin
          rpy="0 0 ${pi/2}"
          xyz="0 0 0"/>
        <geometry>
          <mesh
            filename="package://rail_robot/meshes/locobot_meshes/locobot_tilt.stl"
            scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <inertial>
        <origin
          rpy="0 0 ${pi/2}"
          xyz="0.0237737000 -0.0000016331 0.0000077432"/>
        <mass value="0.019845"/>
        <inertia
          ixx="0.0000021677"
          ixy="0.0000000000"
          ixz="0.0000000001"
          iyy="0.0000063634"
          iyz="0.0000000003"
          izz="0.0000066157"/>
      </inertial>
    </link>

    <gazebo reference="${robot_name}/tilt_link">
      <material>Gazebo/DarkGrey</material>
      <self_collide>true</self_collide>
    </gazebo>

    <joint name="camera" type="fixed">
      <origin
        rpy="0 0 0"
        xyz="0.05318 0.0175 0.000009"/>
      <parent
        link="${robot_name}/tilt_link"/>
      <child
        link="camera_${robot_name}_link"/>
    </joint>

    <gazebo reference="camera">
      <disableFixedJointLumping>true</disableFixedJointLumping>
    </gazebo>

    <link name="camera_${robot_name}_link">
      <visual>
        <origin
          rpy="0 0 0"
          xyz="0 0 0"/>
        <geometry>
          <mesh
            filename="package://rail_robot/meshes/locobot_meshes/locobot_camera.stl"
            scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="">
          <color
            rgba="0.55 0.55 0.55 1"/>
        </material>
      </visual>
      <collision>
        <origin
          rpy="0 0 0"
          xyz="0 0 0"/>
        <geometry>
          <mesh
            filename="package://rail_robot/meshes/locobot_meshes/locobot_camera.stl"
            scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <inertial>
        <origin
          rpy="0 0 0"
          xyz="-0.008972 -0.015818 0.000003"/>
        <mass value="0.072"/>
        <inertia
          ixx="0.0000465400"
          ixy="0.0000003028"
          ixz="0.0000000245"
          iyy="0.0000069128"
          iyz="0.0000000248"
          izz="0.0000468600"/>
      </inertial>
    </link>

    <gazebo reference="camera_${robot_name}_link">
      <material>Gazebo/Grey</material>
      <self_collide>true</self_collide>
    </gazebo>

    <!-- Adds a dummy link, libgazebo_ros_openni_kinect publishes from frame's z-axis -->
    <!-- https://github.com/ros-simulation/gazebo_ros_pkgs/issues/243 -->
    <joint name="camera_depth_joint" type="fixed">
      <origin rpy="${-pi/2} 0 ${-pi/2}" xyz="0 0 0"/>
      <parent link="camera_${robot_name}_link"/>
      <child link="${robot_name}/camera_depth_link"/>
    </joint>
    <link name="${robot_name}/camera_depth_link">
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </link>

    <gazebo reference="camera_${robot_name}_link">
      <sensor name="camera_frame_sensor" type="depth">
        <always_on>true</always_on>
        <update_rate>30.0</update_rate>
        <camera>
          <horizontal_fov>0.994837</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.01</near>
            <far>10</far>
          </clip>
        </camera>
        <plugin filename="libgazebo_ros_camera.so" name="camera_frame_controller">
          <ros>
            <namespace>/$(arg robot_name)</namespace>
          </ros>
          <always_on>true</always_on>
          <update_rate>0.0</update_rate>
          <camera_name>camera</camera_name>
          <image_topic_name>color/image_raw</image_topic_name>
          <camera_info_topic_name>color/camera_info</camera_info_topic_name>
          <depth_image_topic_name>aligned_depth_to_color/image_raw</depth_image_topic_name>
          <depth_image_camera_info_topic_name>aligned_depth_to_color/camera_info</depth_image_camera_info_topic_name>
          <point_cloud_topic_name>depth_registered/points</point_cloud_topic_name>
          <frame_name>${robot_name}/camera_depth_link</frame_name>
          <point_cloud_cutoff>0.01</point_cloud_cutoff>
          <point_cloud_cutoff_max>10</point_cloud_cutoff_max>
          <distortion_k1>0.00000001</distortion_k1>
          <distortion_k2>0.00000001</distortion_k2>
          <distortion_k3>0.00000001</distortion_k3>
          <distortion_t1>0.00000001</distortion_t1>
          <distortion_t2>0.00000001</distortion_t2>
          <cx>0</cx>
          <cy>0</cy>
          <focal_length>0</focal_length>
          <hack_baseline>0</hack_baseline>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:macro>

</robot>
